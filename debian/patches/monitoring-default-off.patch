--- a/lib/config/defaults.h
+++ b/lib/config/defaults.h
@@ -63,7 +63,7 @@
 #define DEFAULT_DMEVENTD_MIRROR_LIB "libdevmapper-event-lvm2mirror.so"
 #define DEFAULT_DMEVENTD_SNAPSHOT_LIB "libdevmapper-event-lvm2snapshot.so"
 #define DEFAULT_DMEVENTD_THIN_LIB "libdevmapper-event-lvm2thin.so"
-#define DEFAULT_DMEVENTD_MONITOR 1
+#define DEFAULT_DMEVENTD_MONITOR 0
 #define DEFAULT_BACKGROUND_POLLING 1
 
 #ifndef DMEVENTD_PATH
--- a/conf/example.conf.in
+++ b/conf/example.conf.in
@@ -1032,7 +1032,7 @@
 
     # Monitoring is enabled by default when activating logical volumes.
     # Set to 0 to disable monitoring or use the --ignoremonitoring option.
-    monitoring = 1
+    monitoring = 0
 
     # When pvmove or lvconvert must wait for the kernel to finish
     # synchronising or merging data, they check and report progress
--- a/tools/toollib.c
+++ b/tools/toollib.c
@@ -1630,8 +1630,6 @@
 int get_activation_monitoring_mode(struct cmd_context *cmd,
 				   int *monitoring_mode)
 {
-	*monitoring_mode = DEFAULT_DMEVENTD_MONITOR;
-
 	if (arg_count(cmd, monitor_ARG) &&
 	    (arg_count(cmd, ignoremonitoring_ARG) ||
 	     arg_count(cmd, sysinit_ARG))) {
@@ -1639,13 +1637,15 @@
 		return 0;
 	}
 
-	if (arg_count(cmd, monitor_ARG))
-		*monitoring_mode = arg_int_value(cmd, monitor_ARG,
+	*monitoring_mode = find_config_tree_bool(cmd, activation_monitoring_CFG,
 						 DEFAULT_DMEVENTD_MONITOR);
-	else if (is_static() || arg_count(cmd, ignoremonitoring_ARG) ||
-		 arg_count(cmd, sysinit_ARG) ||
-		 !find_config_tree_bool(cmd, activation_monitoring_CFG, NULL))
+
+	if (is_static() || arg_count(cmd, ignoremonitoring_ARG) ||
+		 arg_count(cmd, sysinit_ARG))
 		*monitoring_mode = DMEVENTD_MONITOR_IGNORE;
+	else if (arg_count(cmd, monitor_ARG))
+		*monitoring_mode = arg_int_value(cmd, monitor_ARG,
+						 *monitoring_mode);
 
 	return 1;
 }
